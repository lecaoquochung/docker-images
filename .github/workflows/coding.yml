name: Coding Test

on:
  push:
    branches: ["coding*", "prog*", "test*"]

jobs:
  inspect-code:
    name: '[Required] Inspect code'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          branch: gh-pages
          folder: programming/typescript/challenges
          fetch-depth: 2
      - name: Set up Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          cache: npm
          node-version-file: '.nvmrc'
      - name: Install dependencies
        run: npm ci
        env:
          TEST: true
      - name: Check code
        run: ls -all
  
  # TEST
  test-scala:
    runs-on: ubuntu-latest
    needs: inspect-code
    environment: CI
    steps:
      - uses: actions/checkout@v4  
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'sbt'
      - name: Install sbt
        run: |
          echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | sudo tee /etc/apt/sources.list.d/sbt.list
          echo "deb https://repo.scala-sbt.org/scalasbt/debian /" | sudo tee /etc/apt/sources.list.d/sbt_old.list
          curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x99E82A75642AC823" | sudo apt-key add
          sudo apt-get update
          sudo apt-get install sbt
      - name: Run tests
        working-directory: ./scala/coding  
        run: |  
          sbt clean coverage test coverageReport
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN}}
        with:
          fail_ci_if_error: true

  test-typescript-challenges:
    runs-on: ubuntu-latest
    needs: inspect-code
    environment: CI
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version-file: '.nvmrc'
      - name: Install dependencies
        run: |
          npm ci
      - name: Build
        run: |
          cd programming/typescript/challenges
          npm install --no-save # Install dependencies for TypeScript Challenges
          npm run build
      - name: Run tests - TypeScript Challenges (NPM)
        run: |
          cd programming/typescript/challenges
          npm test
          npm run test:jest
      - name: Reporter (Verify test results)
        run: |
          cd programming/typescript/challenges
          # JEST_JUNIT_CLASSNAME="${{ github.workspace }}/programming/typescript/challenges" npx jest --reporters=jest-junit
          pwd;
          ls -all programming/typescript/challenges/test-results
          ls -all programming/typescript/challenges/coverage
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v4
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      #   with:
      #     fail_ci_if_error: true
      #     directory: programming/typescript/challenges/coverage
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          # files: ./programming/typescript/challenges/test-results/junit/**/*.xml
      # # Deploy to Github Pages
      # - name: Deploy to Github Pages
      #   if: always()
      #   uses: JamesIves/github-pages-deploy-action@4.1.5
      #   with:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     BRANCH: gh-pages
      #     FOLDER: programming/typescript/challenges/test-results
      #     CLEAN: true